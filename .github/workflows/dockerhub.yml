name: DockerHub-push

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  R-CMD-check:
    name: R-CMD-check-DockerHub
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
      RGL_USE_NULL: TRUE
    steps:
      - uses: actions/checkout@v2
      - name: Setup R
        uses: r-lib/actions/setup-r@v1
        with:
          install-r: false
          
      - name: Install remotes
        run: |
          install.packages('remotes')
        shell: Rscript {0}
      
      - name: Install Linux system dependencies
        run: |
          sysreqs=$(Rscript -e 'cat("apt-get update -y && apt-get install -y", paste(gsub("apt-get install -y ", "", remotes::system_requirements("ubuntu", "20.04")), collapse = " "))')
          echo $sysreqs
          sudo -s eval "$sysreqs"
          
      - name: Get R package name
        run: |
          name=$(grep '^Package:' DESCRIPTION | cut -d\   -f2)
          echo "packageName=${name}" >> $GITHUB_ENV
        shell: bash {0}   
        
      - name: Get R package version
        run: |
          version=$(grep Version DESCRIPTION | grep -o "[0-9.]\+")
          echo "packageVersion=${version}" >> $GITHUB_ENV
        shell: bash {0}  
      
      - name: Create Dockerfile 
        if: 'true' == 'false'
        run: |
          #### Install packages ####
          install.packages(c("dockerfiler","BiocManager","piggyback"))
          BiocManager::install("orthogene")
          #### Create Dockerfile ####
          Dockerfile <- dockerfiler::dock_from_desc(repos = BiocManager::repositories())  
          tmp <- file.path(tempdir(),"Dockerfile")
          Dockerfile$write(tmp)
          #### Upload Dockerfile ####
          repo <- system("git config --get remote.origin.url", intern=TRUE)
          repo <- gsub("https://github.com/|.git","",repo)
          piggyback::pb_upload(file = tmp, repo = repo, overwrite = TRUE)
        shell: Rscript {0}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build service
        uses: docker/build-push-action@v2
        with: 
          file: |
            https://github.com/neurogenomics/${{ env.packageName }}/releases/download/latest/Dockerfile
          load: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.packageName }}:${{ env.packageVersion }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.packageName }}:latest
          
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: push service
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.packageName }}:${{ env.packageVersion }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.packageName }}:latest
          